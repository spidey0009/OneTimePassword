#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Jul 19, 2020 01:06:19 PM IST  platform: Windows NT
import requests
import json
from tkinter import messagebox
import sys
import random
global otp
otp=random.randrange(0000,9999)


def verifypage():

    try:
        import Tkinter as tk
    except ImportError:
        import tkinter as tk

    try:
        import ttk
        py3 = False
    except ImportError:
        import tkinter.ttk as ttk
        py3 = True

    import unknown_support

    def vp_start_gui():
        '''Starting point when module is the main routine.'''
        global val, w, root
        root = tk.Tk()
        top = Toplevel2(root)
        unknown_support.init(root, top)
        root.mainloop()

    w = None

    def create_Toplevel2(rt, *args, **kwargs):
        '''Starting point when module is imported by another module.
           Correct form of call: 'create_Toplevel2(root, *args, **kwargs)' .'''
        global w, w_win, root
        # rt = root
        root = rt
        w = tk.Toplevel(root)
        top = Toplevel2(w)
        unknown_support.init(w, top, *args, **kwargs)
        return (w, top)

    def destroy_Toplevel2():
        global w
        w.destroy()
        w = None

    class Toplevel2:
        def verify(self):
            otpE = int(self.Entry5.get())
            if otpE == otp:
                messagebox.showinfo("SUCCESS","YOUR OTP IS VERIFIED")
                quit(0)
            else:
                messagebox.showerror("FAILURE","WRONG OTP")
                quit(1)

        def __init__(self, top=None):
            '''This class configures and populates the toplevel window.
               top is the toplevel containing window.'''
            _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
            _fgcolor = '#000000'  # X11 color: 'black'
            _compcolor = '#d9d9d9'  # X11 color: 'gray85'
            _ana1color = '#d9d9d9'  # X11 color: 'gray85'
            _ana2color = '#ececec'  # Closest X11 color: 'gray92'
            self.style = ttk.Style()
            if sys.platform == "win32":
                self.style.theme_use('winnative')
            self.style.configure('.', background=_bgcolor)
            self.style.configure('.', foreground=_fgcolor)
            self.style.configure('.', font="TkDefaultFont")
            self.style.map('.', background=
            [('selected', _compcolor), ('active', _ana2color)])

            top.geometry("600x450+650+150")
            top.minsize(148, 1)
            top.maxsize(1924, 1055)
            top.resizable(1, 1)
            top.title("VERIFICATION")
            top.configure(background="#c7bdf4")
            top.configure(highlightbackground="#d9d9d9")
            top.configure(highlightcolor="black")

            self.Entry5 = tk.Entry(top)
            self.Entry5.place(relx=0.367, rely=0.222, height=44, relwidth=0.49)
            self.Entry5.configure(background="white")
            self.Entry5.configure(disabledforeground="#a3a3a3")
            self.Entry5.configure(font="TkFixedFont")
            self.Entry5.configure(foreground="#000000")
            self.Entry5.configure(highlightbackground="#d9d9d9")
            self.Entry5.configure(highlightcolor="black")
            self.Entry5.configure(insertbackground="black")
            self.Entry5.configure(selectbackground="blue")
            self.Entry5.configure(selectforeground="white")

            self.TButton1 = ttk.Button(top)
            self.TButton1.place(relx=0.367, rely=0.644, height=70, width=148)
            self.TButton1.configure(takefocus="")
            self.TButton1.configure(text='''VERIFY''')
            self.TButton1.configure(command=self.verify)
            self.Label1 = tk.Label(top)
            self.Label1.place(relx=0.117, rely=0.244, height=26, width=122)
            self.Label1.configure(activebackground="#f9f9f9")
            self.Label1.configure(activeforeground="black")
            self.Label1.configure(background="#d9d9d9")
            self.Label1.configure(disabledforeground="#a3a3a3")
            self.Label1.configure(
                font="-family {Segoe UI Historic} -size 14 -weight bold -slant roman -underline 0 -overstrike 0")
            self.Label1.configure(foreground="#000000")
            self.Label1.configure(highlightbackground="#d9d9d9")
            self.Label1.configure(highlightcolor="black")
            self.Label1.configure(text='''Enter OTP:''')

    if __name__ == '__main__':
        vp_start_gui()


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import mainpage_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    mainpage_support.set_Tk_var()
    top = Toplevel1 (root)
    mainpage_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    mainpage_support.set_Tk_var()
    top = Toplevel1 (w)
    mainpage_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def getDetails(self):
        name=self.Entry1.get()
        branch=self.Entry2.get()
        phone=self.Entry3.get()
        otpass = otp
        url1 = "https://www.fast2sms.com/dev/bulk"
        diction = {"authorization": "JV85Zqk7hpfcSATFU4Duv2irMGQOPxoyYKdHXjsbCe3nRLNEgmwOXQVk0bvAYdzht4W6iL13qa7BFHeo",
                   "sender_id": "FSTSMS",
                   "message": "Your otp is " + str(otpass),
                   "language": "english",
                   "route": "p",
                   "numbers": phone
                   }
        responseMes = requests.get(url1, params=diction)
        diction = responseMes.json()
        if responseMes:
            messagebox.showinfo("SUCCESS", "THE MESSAGE WAS SENT SUCCESSFULLY")
            verifypage()
        else:
            messagebox.showerror("FAILED", "THE MESSAGE WAS NOT SENT")


    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x600+650+150")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("REGISTRATION")
        top.configure(background="#b6c9fc")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.283, rely=0.7, height=53, width=239)
        self.Button1.configure(activebackground="#0000ff")
        self.Button1.configure(activeforeground="white")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#0059ff")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family Tahoma -size 14 -weight normal -slant roman -underline 1 -overstrike 0")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Verify Mobile Number''')
        self.Button1.configure(textvariable=mainpage_support.verifyButton)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.083, rely=0.183, height=25, width=74)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI Black} -size 14 -weight bold -slant italic -underline 0 -overstrike 0")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Name''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.067, rely=0.317, height=25, width=92)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI Black} -size 14 -weight bold -slant italic -underline 0 -overstrike 0")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''branch''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.067, rely=0.46, height=25, width=173)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI Black} -size 14 -weight bold -slant italic -underline 0 -overstrike 0")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Phone Number''')

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.367, rely=0.175,height=34, relwidth=0.457)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="-family Arial -size 14 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="blue")
        self.Entry1.configure(selectforeground="white")
        self.Entry1.configure(textvariable=mainpage_support.nameEntry)

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(relx=0.383, rely=0.317,height=34, relwidth=0.44)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="-family Arial -size 14 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="blue")
        self.Entry2.configure(selectforeground="white")
        self.Entry2.configure(textvariable=mainpage_support.branchEntry)

        self.Entry3 = tk.Entry(top)
        self.Entry3.place(relx=0.383, rely=0.443,height=34, relwidth=0.457)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="-family Arial -size 14 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="blue")
        self.Entry3.configure(selectforeground="white")
        self.Entry3.configure(textvariable=mainpage_support.number)
        self.Button1.configure(command=self.getDetails)

if __name__ == '__main__':
    vp_start_gui()


#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Jul 19, 2020 01:06:47 PM IST  platform: Windows NT

#new classs zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz




